/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
DROP DATAVERSE ocpd IF EXISTS;
CREATE DATAVERSE ocpd;
USE ocpd;
CREATE TYPE LocalThreateningTweet AS {
  nid: uuid
};

CREATE ACTIVE DATASET LocalThreateningTweets(LocalThreateningTweet) PRIMARY KEY nid autogenerated;

CREATE TYPE OfficerLocation AS {
  oid: bigint,
  location: point
};

CREATE ACTIVE DATASET OfficerLocations(OfficerLocation) PRIMARY KEY oid;

USE ocpd;
SELECT threateningTweet.result
  FROM LocalThreateningTweets tn
  UNNEST tn.results threateningTweet
  WHERE 1 = (SELECT VALUE o.oid FROM OfficerLocations o ORDER BY spatial_distance(o.location, create_point(threateningTweet.result.location[0], threateningTweet.result.location[1])) ASC)[0];